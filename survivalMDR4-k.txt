survivalmdr <- function(x,time,surv.st){
library(survival)
r<-rank(time)
nm <- dim(x)
n <- nm[1]
m <- nm[2]
int=1
score<- ratioz <- domi <- tempdomi <- 0
for (j in 1:(nm[2]-1)){
	for (k in (j+1):nm[2]){
		tt <- rep(0, n[1])
		tt1 <- tt
           for (l in 0:8){
			tt1 <- rep(0, n[1])
                  ee <- trunc(l/3)
                  ff <- l-3*ee
			tt1[x[,j]==ee & x[,k]==ff] <- 1
			if(length(unique(surv.st[tt1==1]))==1) tt[x[,j]==ee & x[,k]==ff] <- unique(surv.st[tt1==1])
			else {fit <- coxph(Surv(time, surv.st)~tt1) 
                  if (sum(fit$coefficients) > 0) tt[x[,j]==ee & x[,k]==ff] <- 1
			}}
		fit <- survdiff(Surv(time, surv.st)~tt)
            domi[int] <- (sum(tt*y)+nn)/2/nn
		#score[int] <- sum(tt*y)+nn
		score[int] <- fit$chisq
		int <- int + 1
	}
tempdomi[j] <- max(score)
}
mindomi <- max(domi)
maxscore <- max(score)
snpind <- ((1:length(domi))[score==maxscore])
snpind <- snpind[sample(1:length(snpind),1)]
j<-1
while(snpind > (j)*(2*nm[2]-j-1)/2) j <- j+1
k <- snpind - (j-1)*(2*nm[2]-j)/2 + j
snpid <-c(j,k)

list(snpid=snpid, domi=domi, ratioz=ratioz,score=score)

}

survivalmdr1 <- function(x,time,surv.st){
library(survival)
r<-rank(time)
nm <- dim(x)
n <- nm[1]
m <- nm[2]
int=1
score<- ratioz <- domi <- tempdomi <- 0
for (j in 1:(nm[2]-2)){
	for (k in (j+1):(nm[2]-1)){
		for(l in (k+1): nm[2]){
		tt <- rep(0, n[1])
		tt1 <- tt
           for (ll in 0:26){
			tt1 <- rep(0, n[1])
                  ee <- trunc(ll/9)
                  ff <- trunc((ll-9*ee)/3)
			gg <- ll-9*ee-3*ff
			tt1[x[,j]==ee & x[,k]==ff & x[,l]==gg] <- 1
			if(length(unique(surv.st[tt1==1]))==1) tt[x[,j]==ee & x[,k]==ff & x[,l]==gg] <- unique(surv.st[tt1==1])
			else {fit <- coxph(Surv(time, surv.st)~tt1) 
                  if (sum(fit$coefficients) > 0) tt[x[,j]==ee & x[,k]==ff & x[,l]==gg] <- 1
			}}
		fit <- survdiff(Surv(time, surv.st)~tt)
            domi[int] <- (sum(tt*y)+nn)/2/nn
		#score[int] <- sum(tt*y)+nn
		score[int] <- fit$chisq
		int <- int + 1
		}
	}
#tempdomi[j] <- max(score)
}
mindomi <- max(domi)
maxscore <- max(score)
snpind <- ((1:length(domi))[score==maxscore])
snpind <- snpind[sample(1:length(snpind),1)]
sumin <- 0

for (kk in (nm[2]-2):1){
sumin[nm[2]-1-kk] <- sum(1:kk)
}
j<-1
while(snpind > sum(sumin[1:j])) j <- j+1
k1 <- snpind - sum(sumin[1:(j-1)])
if(k1<0) k1 <- snpind
sumin1 <- (nm[2]-j-1):1
k <- 1
while (k1 > sum(sumin1[1:k])) k <- k+1
l <- k1 - sum(sumin1[1:(k-1)])
if(l<0) l <- k1
k <- k+j
l <- l+k 
snpid <-c(j,k,l)

list(snpid=snpid, domi=domi, ratioz=ratioz,score=score)

}

survivalmdr23 <- function(x,time,surv.st){
library(survival)
nm <- dim(x)
n <- nm[1]
m <- nm[2]
lastdeath <- max(time[surv.st==0])
#if (lastdeath == max(time)) {surv.st2 <- surv.st[time == lastdeath]
#}
#tenper <- sort(time)[round(length(time)*0.9)]
tenper <- 0
time[time > max(tenper, lastdeath)] <- max(tenper, lastdeath)
tscore2 <- survivaltres(time, surv.st)
tscore <- sum(tscore2)/sum(1-tscore2)
int=1
auc <- ba<-score2<-score<- ratioz <- domi <- tempdomi <- 0
for (j in 1:(nm[2]-2)){
		for (k in (j+1):(nm[2]-1)){
		for(l in (k+1): nm[2]){
		tt <- rep(0, n[1])
		tt1 <- tt
		tscore1 <- NULL
		tt2 <- NULL
           for (ll in 0:26){
			tt1 <- rep(0, n[1])
                  ee <- trunc(ll/9)
                  ff <- trunc((ll-9*ee)/3)
			gg <- ll-9*ee-3*ff
			tt1[x[,j]==ee & x[,k]==ff & x[,l]==gg] <- 1		
			if(sum(tt1==1)){
		      tscore1 <- c(tscore1, sum(tscore2[tt1==1])/sum(1-tscore2[tt1==1]))
			tt2<- cbind(tt2, tt1)
			if (sum(tscore2[tt1==1])/sum(1-tscore2[tt1==1]) > tscore) tt[x[,j]==ee & x[,k]==ff & x[,l]==gg] <- 1
			}}
		psur <- 0
		pnosur <-0
		sortre <- rank(tscore1)
		score1 <- 0
		for (ll in 0:floor(max(sortre)-0.01)){
			if(sum(sortre>ll)==1) tt3 <- tt2[, sortre>ll]
			else tt3 <- apply(tt2[, sortre>ll],1,sum)
			pnosur[ll+1] <- sum(tscore2[tt3==1])
			psur[ll+1] <- sum(tt3==1) - pnosur[ll+1] 
			if(length(unique(tt3))==1) score1[ll+1] <- 0
			else {fit <- survdiff(Surv(time, surv.st)~tt3)
			score1[ll+1] <- fit$chisq}
		}
		sen <- pnosur/sum(tscore2)
		spec <- psur/(sum(1-tscore2))
		sen <- c(sen, 0)
		spec <- c(spec, 0)
		spec <- 1 - spec
		ba[int] <- max(0.5*(sen+spec))		 
		spec <- 1-spec
		sen1 <- 0.5*(sen[1:(length(sen)-1)]+sen[2:length(sen)])
		spec1 <- spec[1:(length(sen)-1)]-spec[2:length(sen)] 
		auc[int] <- sum(sen1*spec1)
		fit <- survdiff(Surv(time, surv.st)~tt)
            domi[int] <- (sum(tt*y)+nn)/2/nn
		#score[int] <- sum(tt*y)+nn
		score[int] <- fit$chisq
		score2[int] <- sum(score1)

		int <- int + 1
	}
	}
#tempdomi[j] <- max(score)
}
mindomi <- max(domi)
maxscore <- max(score)
snpind <- ((1:(int-1))[score==maxscore])
snpind <- snpind[sample(1:length(snpind),1)]
sumin <- 0

for (kk in (nm[2]-2):1){
sumin[nm[2]-1-kk] <- sum(1:kk)
}
j<-1
while(snpind > sum(sumin[1:j])) j <- j+1
k1 <- snpind - sum(sumin[1:(j-1)])
if(k1<0) k1 <- snpind
sumin1 <- (nm[2]-j-1):1
k <- 1
while (k1 > sum(sumin1[1:k])) k <- k+1
l <- k1 - sum(sumin1[1:(k-1)])
if(l <= 0) l <- k1
k <- k+j
l <- l+k 
snpid <-c(j,k,l)
newsnpid<-0
newsnpid[1] <- findid(auc, m)
newsnpid[2] <- findid(ba, m)
newsnpid[3] <- findid(score2, m)
newsnpid[4] <- findid(score, m)
list(newid=newsnpid, snpid=snpid, domi=domi, ratioz=ratioz,score=score)

}

findid <- function(score,n){
maxscore <- max(score)
snpind <- ((1:(int-1))[score==maxscore])
snpind <- snpind[sample(1:length(snpind),1)]
sumin <- 0
nm <- c(1, n)
for (kk in (nm[2]-2):1){
sumin[nm[2]-1-kk] <- sum(1:kk)
}
j<-1
while(snpind > sum(sumin[1:j])) j <- j+1
k1 <- snpind - sum(sumin[1:(j-1)])
if(k1<0) k1 <- snpind
sumin1 <- (nm[2]-j-1):1
k <- 1
while (k1 > sum(sumin1[1:k])) k <- k+1
l <- k1 - sum(sumin1[1:(k-1)])
if(l <= 0) l <- k1
k <- k+j
l <- l+k 
snpid <-c(j,k,l)
return(10000*j+100*k+l)
}

survivaltime <- function(label, lam1, lam2){

survtime <- label
n <- length(label)
survtime[label==1] <- rnorm(sum(label==1), mean=lam1, sd=0.5)
survtime[label==0] <- rnorm(sum(label==0), mean=lam2, sd=0.5)
Y<-matrix(0,n,2)
Y[,1] <- survtime
cuto <- sort(survtime)[n*0.7]
Y[,2]<- rnorm(n, cuto, 0.2)
Y1<-matrix(0,n,2)
Y1[,1]<-pmin(Y[,1],Y[,2])
Y1[Y[,1]<Y[,2],2]<-1
return(Y1)
}

survivaltres <- function(time, surv.st){
r<-rank(time)
n<-length(time)
risk <- kk<-d<-rep(0,n)
uniquet <- unique(r)
index <- match(uniquet, time)
for(i in 1:n){	
	d[i]<-sum(surv.st[r==r[i]])
	kk[i] <- sum(r>=r[i])
	risk[i] <- 1-d[i]/kk[i]
}
culsurv <- 0
for (i in 1:n){
culsurv[i] <- exp(sum(log(unique(risk[r<=r[i]]))))
}
culconsurv <- min(culsurv)/culsurv
culconsurv[surv.st==1] <- 0
pt <- sum(culconsurv)
ps <- sum(1-culconsurv)
return(1-culconsurv) 
}

ssimucross <- function(x,time, surv.st, nfold,order1){

#nfold <- 10
n <- dim(x)
kk <- round(n[1]/nfold)
yy<-cbind(time, surv.st)
orderer <- sample(1:n[1], n[1])
#yy <- y[orderer]
#x<- x[orderer, ]
count <- 0
index <- matrix(0,4,nfold)
pred <- 0
ratioz <- 0
score <- NULL
if (order1==2){

for(i in 1:nfold) {
      tt <- rep(-1, kk)
	x1 <- x[ - c(((i - 1) * kk + 1):(i * kk)),  ]
      y1 <- yy[- c(((i - 1) * kk + 1):(i * kk)), ]
	x2 <- x[c(((i - 1) * kk + 1):(i * kk)),  ]
      y2 <- yy[c(((i - 1) * kk + 1):(i * kk)), ]
      mdrtr <- survivalmdr2(x1,y1[,1],y1[,2])
	idtr <- mdrtr$newid
	index[,i] <- idtr
	n1 <- dim(x2)
	tt2 <- matrix(0, n1[1],4)
	for (j in 1:4){
	tt2[,j] <- ssimupred(x1,x2,y1,idtr[j])
	}
	score <- rbind(score, tt2)
}
chisq <- 0
for (j in 1:4){

fit <- survdiff(Surv(time, surv.st)~score[,j])
chisq[j] <- fit$chisq
 
}
}

if (order1==3){
for(i in 1:nfold) {
      tt <- rep(-1, kk)
	x1 <- x[ - c(((i - 1) * kk + 1):(i * kk)),  ]
      y1 <- yy[- c(((i - 1) * kk + 1):(i * kk)), ]
	x2 <- x[c(((i - 1) * kk + 1):(i * kk)),  ]
      y2 <- yy[c(((i - 1) * kk + 1):(i * kk)), ]
      mdrtr <- survivalmdr23(x1,y1[,1],y1[,2])
	idtr <- mdrtr$newid
	index[,i] <- idtr
	n1 <- dim(x2)
	tt2 <- matrix(0, n1[1],4)
	for (j in 1:4){
	tt2[,j] <- ssimupred(x1,x2,y1,idtr[j])
	}
	score <- rbind(score, tt2)
}
chisq <- 0
for (j in 1:4){

fit <- survdiff(Surv(time, surv.st)~score[,j])
chisq[j] <- fit$chisq
 
}
}



list(index =index, score =chisq)
}

ssimupred <- function(x1,x2,y1, snpid){

time <- y1[,1]
surv.st <- y1[,2]
lastdeath <- max(time[surv.st==0])
tenper <- 0
time[time > max(tenper, lastdeath)] <- max(tenper, lastdeath)
tscore2 <- survivaltres(time, surv.st)
tscore <- sum(tscore2)/sum(1-tscore2)
m <- dim(x2)
n <- dim(x1)

if (snpid< 10000){

j <- trunc(snpid/100)
k <- snpid-100*j
tt <- rep(0, n[1])
tt1 <- tt
tscore1 <- NULL
tt2 <- rep(0, m[1])
for (l in 0:8){
			tt1 <- rep(0, n[1])
                  ee <- trunc(l/3)
                  ff <- l-3*ee
			tt1[x1[,j]==ee & x1[,k]==ff] <- 1
		      if(sum(tt1==1)){
		      tscore1 <- c(tscore1, sum(tscore2[tt1==1])/sum(1-tscore2[tt1==1]))
			if (sum(tscore2[tt1==1])/sum(1-tscore2[tt1==1]) > tscore) tt2[x2[,j]==ee & x2[,k]==ff] <- 1
			}}
}

else {

j <- trunc(snpid/10000)
k <- trunc((snpid-10000*j)/100)
l <- snpid -10000*j - 100*k
tt <- rep(0, n[1])
tt1 <- tt
tt2 <- rep(0, m[1])
for (ll in 0:26){
			tt1 <- rep(0, n[1])
                  ee <- trunc(ll/9)
                  ff <- trunc((ll-9*ee)/3)
			gg <- ll-9*ee-3*ff
			tt1[x1[,j]==ee & x1[,k]==ff & x1[,l]==gg] <- 1		
			if(sum(tt1==1)){
		      tscore1 <- c(tscore1, sum(tscore2[tt1==1])/sum(1-tscore2[tt1==1]))
			if (sum(tscore2[tt1==1])/sum(1-tscore2[tt1==1]) > tscore) tt2[x2[,j]==ee & x2[,k]==ff & x2[,l]==gg] <- 1
			}}
}

return(tt2)

}

set.seed(11)
date()
indexAr <- matrix(0, 2,100)
indexAnr <- matrix(0, 2,100)
files <- dir('400/35')
for(i in 1:100){
data <- read.table(paste("400/35/", files[i], sep = ""), header=T)
x <- data[,1:20]
y <- data[,1001]
survtime1 <- survivaltime(y, 2, 3)
time <- survtime1[,1]
surv.st <- survtime1[,2]
write(t(cbind(survtime1, x)), paste("file", i, ".txt",sep=""), sep = "\t", ncol=22)
ffit <- survivalmdr1(x,time,surv.st)
ffit1 <- survivalmdr2(x,time,surv.st)
indexAr[,i]<-ffit$snpid
indexAnr[,i]<-ffit1$snpid
}
date()

survdatal <- read.delim("Functions.txt", header=T)

set.seed(11)
date()
indexAr <- matrix(0, 2,100)
indexAnr <- matrix(0, 2,100)
files <- dir('400/35')
for(i in 1:100){
data <- read.table(paste("400/35/", files[i], sep = ""), header=T)
x <- data[,1:20]
y <- data[,1001]
time[y==1] <- survdatal[survdatal[,3]==1,1]
time[y==0] <- survdatal[survdatal[,3]==0,1]
surv.st[y==1] <- survdatal[survdatal[,3]==1,2]
surv.st[y==0] <- survdatal[survdatal[,3]==0,2]
write(t(cbind(time, surv.st, x)), paste("file-func", i, ".txt",sep=""), sep = "\t", ncol=22)
ffit <- survivalmdr1(x,time,surv.st)
ffit1 <- survivalmdr2(x,time,surv.st)
indexAr[,i]<-ffit$snpid
indexAnr[,i]<-ffit1$snpid
}
date()

sum(indexAr[2,]==2)
sum(indexAnr[2,]==2)
indebad <- (1:100)[indexAnr[2,]!=2]
write(rbind(indebad, indexAnr[,indebad]), "Functionin.txt", ncol=3)

survdatal <- read.delim("foglio.txt", header=T)


date()
set.seed(11)
date()
indexAr <- matrix(0, 2,100)
indexAnr <- matrix(0, 2,100)
files <- dir('400/35')
for(i in 1:100){
data <- read.table(paste("400/35/", files[i], sep = ""), header=T)
x <- data[,1:20]
y <- data[,1001]
time[y==1] <- survdatal[survdatal[,3]==1,1]
time[y==0] <- survdatal[survdatal[,3]==0,1]
surv.st[y==1] <- survdatal[survdatal[,3]==1,2]
surv.st[y==0] <- survdatal[survdatal[,3]==0,2]
write(t(cbind(time, surv.st, x)), paste("file-foglio", i, ".txt",sep=""), sep = "\t", ncol=22)
ffit <- survivalmdr1(x,time,surv.st)
ffit1 <- survivalmdr2(x,time,surv.st)
indexAr[,i]<-ffit$snpid
indexAnr[,i]<-ffit1$snpid
}
date()
sum(indexAr[2,]==2)
sum(indexAnr[2,]==2)
indebad <- (1:100)[indexAnr[2,]!=2]
write(rbind(indebad, indexAnr[,indebad]), "foglioin.txt", ncol=3)


survdatal <- read.delim("func3.txt", header=T)
date()
set.seed(11)
date()
indexAr <- matrix(0, 2,100)
indexAnr <- matrix(0, 2,100)
files <- dir('400/35')
for(i in 1:100){
data <- read.table(paste("400/35/", files[i], sep = ""), header=T)
x <- data[,1:20]
y <- data[,1001]
time[y==1] <- survdatal[survdatal[,3]==1,1]
time[y==0] <- survdatal[survdatal[,3]==0,1]
surv.st[y==1] <- survdatal[survdatal[,3]==1,2]
surv.st[y==0] <- survdatal[survdatal[,3]==0,2]
write(t(cbind(time,surv.st, x)), paste("file-func3-", i, ".txt",sep=""), sep = "\t", ncol=22)
ffit <- survivalmdr1(x,time,surv.st)
ffit1 <- survivalmdr2(x,time,surv.st)
indexAr[,i]<-ffit$snpid
indexAnr[,i]<-ffit1$snpid
}
date()

sum(indexAr[2,]==2)
sum(indexAnr[2,]==2)
indebad <- (1:100)[indexAnr[2,]!=2]
write(rbind(indebad, indexAnr[,indebad]), "func3in.txt", ncol=3) 

#indexAr <- matrix(0, 3,15)
indexAnr <- matrix(0, 4,15)
date()
set.seed(11)
for(i in 12:15){
survdatal <- read.delim(paste("3way_", i, ".txt", sep=""), header=F)
dimx <- dim(survdatal)
x <- survdatal[,3:dimx[2]]
time <- survdatal[,1]
surv.st <- survdatal[,2]
#ffit <- survivalmdr1(x,time,surv.st)
ffit1 <- survivalmdr2(x,time,surv.st)
#indexAr[,i]<-ffit$snpid
indexAnr[,i]<-ffit1$newid
}
date()

write(rbind(1:15, indexAnr), "Stardards1.txt", ncol=5, sep="\t")


survdatal <- read.delim("FVC_survival20 yrs.txt", header=T)
time <- survdatal[,2]
surv.st <- survdatal[,1]
x <- survdatal[,3:10]
ffit1 <- survivalmdr2(x,time,surv.st)
ffit <- survivalmdr1(x,time,surv.st)
ssimucross(x,time, surv.st, nfold,3)

t5du4983

indr =0
for(i in 1:10000){
indr[i]=max(sample(1:1242,2))-max(sample(1:1242,2))
}


indr =0
for(i in 1:100000){
indr[i]=max(sample(1:1242,2))
}

var(indr)


2- way model output
> index
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]  205  205  103  203  203  205  205  205  205   102
[2,]  203  102  102  203  203  203  205  203  205   102
[3,]  103  105  105  103  104  105  305  105  105   105
[4,]  307  102  102  102  203  102  205  102  102   102
> chisq
[1] 0.3619116 1.1128162 0.5049189 2.6406481

3- way model output
      [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9] [,10]
[1,] 30408 10408 10408 10408 20305 10408 10408 10408 10205 10408
[2,] 30408 10408 10408 10203 20305 10408 10408 10408 10203 10408
[3,] 30408 10408 30408 10308 10408 10305 20305 10408 10305 10408
[4,] 30408 10508 10203 10206 10308 30408 10508 10203 10506 10506

$score
[1] 1.49687677 1.12212435 0.07341413 0.44577877
